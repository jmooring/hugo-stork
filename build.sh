#!/usr/bin/env bash

main() {
  declare hugo_publish_dir=public

  declare stork_config_file=stork.config.json   # generated by hugo
  declare stork_index_file=stork.index.json     # generated by stork (json suffix triggers gzip/br compression)

  declare stork_version=v1.5.0
  declare stork_exec=stork-ubuntu-20-04
  declare stork_url="https://github.com/jameslittle230/stork/releases/download/${stork_version}/${stork_exec}"

  # Install Stork if it's not already installed.
  if [[ ! -f "${stork_exec}" ]]; then
    echo -e "\nInstalling Stork...\n"
    wget --no-verbose "${stork_url}" ||
      { echo "Error: unable to wget ${stork_url}"; exit 1; }
    chmod +x "${stork_exec}" ||
      { echo "Error: unable to chmod ${stork_exec}"; exit 1; }
  fi

  # Configure Git
  # See https://github.com/gohugoio/hugo/issues/9810
  if [[ "${CI:-false}" == "true" ]]; then
    git config --global core.quotepath false ||
      { echo "Error: unable to configure Git"; exit 1; }
  fi

  # Build the site.
  echo -e "\nBuilding site...\n"
  hugo --gc --minify ||
    { echo "Error: unable to run hugo"; exit 1; }

  # Build the Stork index.
  echo -e "\nBuilding Stork index...\n"
  ./${stork_exec} build --input "${hugo_publish_dir}/${stork_config_file}" --output "${hugo_publish_dir}/${stork_index_file}" ||
    { echo "Error: unable to run stork"; exit 1; }
}

set -euo pipefail
main "$@"
